<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown配合图床上传图片到Github</title>
    <url>/2023/08/07/Markdown%E9%85%8D%E5%90%88%E5%9B%BE%E5%BA%8A%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0Github/</url>
    <content><![CDATA[<p>Markdown配合图床上传图片到Github</p>
<ol>
<li><p>获取token</p>
<ol>
<li><p>打开github，进入设置，找到<code>Developer settings</code></p>
</li>
<li><p>点击<code>Personal access tokens</code>，选择<code>Tokens(classic)</code></p>
</li>
<li><p>选择<code>Generate new token（classic）</code></p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230807222401180.png" alt="image-20230807222401180" style="zoom:50%;" />
</li>
<li><p>时限改为<code>No expiration</code>，选择<code>repo</code>，点击生成，保存生成的token后续使用</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230807222619122.png" alt="image-20230807222619122" style="zoom:50%;" /></li>
</ol>
</li>
<li><p>进入typora，点击文件，偏好设置，选择PicGo-Core(command line)，图像中的其他选项按照下图所示进行选择</p>
</li>
</ol>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230807221541947.png" alt="image-20230807221541947" style="zoom:50%;" />

<ol start="3">
<li>点击下载或更新，弹出的框选择下载</li>
</ol>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230807221703975.png" alt="image-20230807221703975" style="zoom:50%;" />

<ol start="4">
<li><p>下载成功后，点击打开配置文件，填入下面的代码</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="string">&quot;github&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;github&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;repo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ninuan/images&quot;</span><span class="punctuation">,</span>  <span class="comment">//填写自己的仓库名字</span></span><br><span class="line">      <span class="attr">&quot;branch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;main&quot;</span><span class="punctuation">,</span> <span class="comment">//自己的分支，main或者master</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 填写第一步获得的token </span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/&quot;</span><span class="punctuation">,</span>  <span class="comment">// 仓库中设置的文件名，可以设置，也可以不设置</span></span><br><span class="line">      <span class="attr">&quot;customUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://github.com/ninuan/images/raw/main/&quot;</span>  <span class="comment">// 这个位置按照对应的设置来填写网址，可以打开一个上传后的图片，将网址copy下来，eg.  https://github.com/ninuan/images/blob/main/images/202301051712715.png，对应的位置进行修改，raw一定要修改，否则可以上传但无法加载</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;github&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;transformer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;path&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;picgo-plugin-github-plus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>点击<code>图片上传选项</code>，提示成功即代表创建成功（后续验证的时候如果出现上传失败，如果之前验证过，因为验证时候上传的图片名称是一样的，可以去仓库把图片删除一下即可，如果是自己上传的图片则没有影响，因为是按照当时的时间自动命的名字）</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230807223357215.png" alt="image-20230807223357215" style="zoom:50%;" /></li>
</ol>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>vpn搭建教程</title>
    <url>/2023/07/19/VPN%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="VPN搭建教程"><a href="#VPN搭建教程" class="headerlink" title="VPN搭建教程"></a>VPN搭建教程</h1><p>DNS书写：</p>
<ol>
<li><p>安装trojan</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sudo bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/trojan-gfw/trojan-quickstart/master/trojan-quickstart.sh)&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装nginx搭建https伪装</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sudo yum update //更新软件包</span><br><span class="line"></span><br><span class="line">//安装nginx</span><br><span class="line">sudo yum install epel-release</span><br><span class="line">sudo yum install nginx</span><br><span class="line"></span><br><span class="line">//启动nginx</span><br><span class="line">systemctl enable nginx; systemctl start nginx</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">默认情况下，Nginx 会监听 80 端口，您可以通过在浏览器中输入服务器的 IP 地址或域名来验证 Nginx 是否安装成功。如果您能够看到 Nginx 的欢迎页面，则表示安装成功。如果未能成功启动 Nginx，请检查 Nginx 的配置文件是否正确，并检查是否有其它服务占用了 80 端口。</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">// nginx页面地址在/usr/share/nginx/html  修改下面的nginx即可搭建成功界面</span><br></pre></td></tr></table></figure>
</li>
<li><p>证书申请</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">//安装certbot</span><br><span class="line">sudo yum install certbot</span><br><span class="line"></span><br><span class="line">// 申请证书</span><br><span class="line">sudo certbot certonly --webroot -w /path/to/your/application/root --domain example.com --email your-email@example.com</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">/path/to/your/application/root 填写自己前端网页地址，例如本实例即为/usr/share/nginx/html</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>4.完善</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//放前端页面</span><br><span class="line">具体位置在nginx.conf里面可以直接找。</span><br><span class="line">//改nginx配置</span><br><span class="line">直接复制nginx.conf替换原来的。</span><br><span class="line">VPS的nginx.conf位置：/etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//改trojan配置：</span><br><span class="line">将config.json文件复制替换原来的：</span><br><span class="line">Trojan的config.json位置:/usr/local/etc/trojan/config.json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//设置重启和开机自启动，这个直接问chatgpt</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bbr加速安装</span><br><span class="line">//先安装wget</span><br><span class="line">yum install wget</span><br><span class="line"></span><br><span class="line">//安装bbr</span><br><span class="line">wget -N --no-check-certificate &quot;https://gist.github.com/zeruns/a0ec603f20d1b86de6a774a8ba27588f/raw/4f9957ae23f5efb2bb7c57a198ae2cffebfb1c56/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>vpn</tag>
      </tags>
  </entry>
  <entry>
    <title>自建测速节点，解决V2rayN测速为0的问题</title>
    <url>/2023/07/21/%E8%87%AA%E5%BB%BA%E6%B5%8B%E9%80%9F%E8%8A%82%E7%82%B9%EF%BC%8C%E8%A7%A3%E5%86%B3V2rayN%E6%B5%8B%E9%80%9F%E4%B8%BA0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h3 id="本教程需要使用的网站或工具："><a href="#本教程需要使用的网站或工具：" class="headerlink" title="本教程需要使用的网站或工具："></a>本教程需要使用的网站或工具：</h3><ol>
<li><a href="https://www.cloudflare.com/">https://www.cloudflare.com/</a></li>
<li>一个域名（需要解析到cloudflare上面）</li>
<li>科学上网</li>
</ol>
<h3 id="如果不想花费力气，直接下载：测速"><a href="#如果不想花费力气，直接下载：测速" class="headerlink" title="如果不想花费力气，直接下载：测速"></a>如果不想花费力气，直接下载：<a href="https://short.ninuan.link/yxip">测速</a></h3><h3 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h3><ol>
<li><p>登录cloudflare，点击<code>Workers和Pages</code>，创建应用程序</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230721144833007.png" alt="image-20230721144833007" style="zoom:50%;" />
</li>
<li><p>点击创建Worker，名称随意（但是不能跟已有的重复），点击部署</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230721145006155.png" alt="image-20230721145006155" style="zoom:50%;" />
</li>
<li><p>点击编辑代码，进入之后把原先的代码删完，复制代码，粘贴，然后点击<strong>保存并部署</strong>（如果还是不能使用，替换第四行的链接，在<a href="https://github.com/XIU2/CloudflareSpeedTest/issues/168">https://github.com/XIU2/CloudflareSpeedTest/issues/168</a> 里面找到能用的链接就行）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">addEventListener</span>(<span class="string">&quot;fetch&quot;</span>, <span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(event.<span class="property">request</span>.<span class="property">url</span>);</span><br><span class="line">  <span class="keyword">if</span> (url.<span class="property">pathname</span> == <span class="string">&quot;/&quot;</span> &amp;&amp; url.<span class="property">search</span> == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    url.<span class="property">href</span>=<span class="string">&quot;https://cloudflarest.itkyou.cf/100mb.zip&quot;</span></span><br><span class="line">    <span class="keyword">let</span> request = <span class="keyword">new</span> <span class="title class_">Request</span>(url, event.<span class="property">request</span>);</span><br><span class="line">    event.<span class="title function_">respondWith</span>(<span class="title function_">fetch</span>(request));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>回到Workers空间，找到<code>Custom Domains</code>，点击查看</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230721145322954.png" alt="image-20230721145322954" style="zoom:50%;" />
</li>
<li><p>点击添加自定义域（域名需要在cloudflare存在解析，然后自己在域名前面添加二级域名即可）</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230721145418347.png" alt="image-20230721145418347" style="zoom:50%;" />
</li>
<li><p>现在将添加的自定义域名放到V2rayN里面即可（最好使用最新版本）</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230721145535312.png" alt="image-20230721145535312" style="zoom:50%;" /></li>
</ol>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>cloudflare创建自己的短链生成网站</title>
    <url>/2023/07/20/%E4%BD%BF%E7%94%A8cloudflare%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%9F%AD%E9%93%BE%E7%94%9F%E6%88%90%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<h3 id="本教程需要使用的网站或工具："><a href="#本教程需要使用的网站或工具：" class="headerlink" title="本教程需要使用的网站或工具："></a>本教程需要使用的网站或工具：</h3><ol>
<li><a href="https://www.cloudflare.com/">https://www.cloudflare.com/</a></li>
<li>一个域名（需要解析到cloudflare上面）</li>
<li>科学上网</li>
</ol>
<h3 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h3><ol>
<li><p>登录cloudflare</p>
</li>
<li><p>点击<code>Workers 和 Pages</code></p>
</li>
<li><p>点击<strong>KV</strong></p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720232556634.png" alt="image-20230720232556634" style="zoom:50%;" />
</li>
<li><p>点击创建命名空间，点击添加</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720232658914.png" alt="image-20230720232658914" style="zoom:50%;" />
</li>
<li><p>完成之后点击查看，输入密钥和值（随意，或者可以按照我的填写），点击添加条目</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720232900640.png" alt="image-20230720232900640" style="zoom:50%;" />
</li>
<li><p>点击概述，创建应用程序</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720233042717.png" alt="image-20230720233042717" style="zoom:50%;" />
</li>
<li><p>点击创建Worker，名称随意，点击部署</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720233249511.png" alt="image-20230720233249511" style="zoom:50%;" />
</li>
<li><p>点击编辑代码，进入之后把原先的代码删完，复制这个代码<code>https://github.com/a624587332/Url-Shorten-Worker/blob/main/index.js</code>,粘贴，修改178行成baidu.com等国内网站或者你自己的博客地址也行，然后点击保存并部署</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720233559571.png" alt="image-20230720233559571" style="zoom:50%;" />
</li>
<li><p>回到workers空间，点击设置，点击变量</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720233741484.png" alt="image-20230720233741484" style="zoom:50%;" />
</li>
<li><p>下滑找到KV命名空间绑定，名称填<code>LINKS</code></p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720233919422.png" alt="image-20230720233919422" style="zoom:50%;" />
</li>
<li><p>现在即可通过访问提供的网址进行访问<code>https://....workers.dev/dlj</code>，<code>dlj</code>就是你在第五部中添加的值，因为dev域名污染严重，有时候会进不去，我们可以绑定自己的域名，点击查看（如果没有域名，到这一步即可以使用）</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720234442039.png" alt="image-20230720234442039" style="zoom:50%;" />
</li>
<li><p>点击添加自定义域（域名需要在cloudflare存在解析，然后自己在域名前面添加二级域名即可）</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720234555680.png" alt="image-20230720234555680" style="zoom: 50%;" />
</li>
<li><p>通过你添加的域名加上第五步中你设置的值即可访问</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720234900048.png" alt="image-20230720234900048" style="zoom:50%;" /></li>
</ol>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>节点测速的高速方法</title>
    <url>/2023/07/23/%E8%8A%82%E7%82%B9%E6%B5%8B%E9%80%9F%E7%9A%84%E9%AB%98%E9%80%9F%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="高速优选节点快速的IP"><a href="#高速优选节点快速的IP" class="headerlink" title="高速优选节点快速的IP"></a>高速优选节点快速的IP</h2><ol>
<li><p>根据规则找到反代cloudflare的ip，网址<a href="https://fofa.info/">https://fofa.info</a></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 规则--根据自己想要的节点自己选择</span></span><br><span class="line">国内反代IP：server==&quot;cloudflare&quot; &amp;&amp; port==&quot;80&quot; &amp;&amp; header=&quot;Forbidden&quot; &amp;&amp; country==&quot;CN&quot;</span><br><span class="line">剔除CF：asn!=&quot;13335&quot; &amp;&amp; asn!=&quot;209242&quot;</span><br><span class="line">阿里云：server==&quot;cloudflare&quot; &amp;&amp; asn==&quot;45102&quot;</span><br><span class="line">甲骨文韩国：server==&quot;cloudflare&quot; &amp;&amp; asn==&quot;31898&quot; &amp;&amp; country==&quot;KR&quot;</span><br><span class="line">搬瓦工：server==&quot;cloudflare&quot; &amp;&amp; asn==&quot;25820&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>网站注册</p>
<p>临时邮箱：<a href="http://24mail.chacuo.net/">http://24mail.chacuo.net</a><br>（一个邮箱额度有限，可以用虚拟邮箱）</p>
</li>
<li><p>搜索完成后，点击下载</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230723204214913.png" alt="image-20230723204214913" style="zoom:50%;" />
</li>
<li><p>下载到本地后，打开，找到对应的ip复制</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230723204248143.png" alt="image-20230723204248143" style="zoom:50%;" />
</li>
<li><p>打开网址<a href="https://bulianglin.com/archives/cdn.html">https://bulianglin.com/archives/cdn.html</a> </p>
<p>原始节点需要用自己的节点分享出来，地址的话填写自己的伪装域名</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230723210812062.png" alt="image-20230723210812062" style="zoom:50%;" />

<img src="https://github.com/ninuan/images/raw/main//images/image-20230723204500044.png" alt="image-20230723204500044" style="zoom:50%;" />
</li>
<li><p>下载测速工具<a href="https://short.ninuan.link/node">https://short.ninuan.link/node</a> ,解压后打开exe文件</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230723210248913.png" alt="image-20230723210248913" style="zoom:50%;" />

<p>导入进去之后，<code>Ctrl + A</code>全选，右键测试延迟和速度（延迟内核和下载内核vless都选Xray，vmess内核选clash、Xray），测试完成之后复制节点导入到科学上网工具就行</p>
</li>
</ol>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>vpn</tag>
      </tags>
  </entry>
</search>
