<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/07/19/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
  <entry>
    <title>vpn搭建教程</title>
    <url>/2023/07/19/VPN%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="VPN搭建教程"><a href="#VPN搭建教程" class="headerlink" title="VPN搭建教程"></a>VPN搭建教程</h1><p>DNS书写：</p>
<ol>
<li><p>安装trojan</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sudo bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/trojan-gfw/trojan-quickstart/master/trojan-quickstart.sh)&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装nginx搭建https伪装</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sudo yum update //更新软件包</span><br><span class="line"></span><br><span class="line">//安装nginx</span><br><span class="line">sudo yum install epel-release</span><br><span class="line">sudo yum install nginx</span><br><span class="line"></span><br><span class="line">//启动nginx</span><br><span class="line">systemctl enable nginx; systemctl start nginx</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">默认情况下，Nginx 会监听 80 端口，您可以通过在浏览器中输入服务器的 IP 地址或域名来验证 Nginx 是否安装成功。如果您能够看到 Nginx 的欢迎页面，则表示安装成功。如果未能成功启动 Nginx，请检查 Nginx 的配置文件是否正确，并检查是否有其它服务占用了 80 端口。</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">// nginx页面地址在/usr/share/nginx/html  修改下面的nginx即可搭建成功界面</span><br></pre></td></tr></table></figure>
</li>
<li><p>证书申请</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">//安装certbot</span><br><span class="line">sudo yum install certbot</span><br><span class="line"></span><br><span class="line">// 申请证书</span><br><span class="line">sudo certbot certonly --webroot -w /path/to/your/application/root --domain example.com --email your-email@example.com</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">/path/to/your/application/root 填写自己前端网页地址，例如本实例即为/usr/share/nginx/html</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>4.完善</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//放前端页面</span><br><span class="line">具体位置在nginx.conf里面可以直接找。</span><br><span class="line">//改nginx配置</span><br><span class="line">直接复制nginx.conf替换原来的。</span><br><span class="line">VPS的nginx.conf位置：/etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//改trojan配置：</span><br><span class="line">将config.json文件复制替换原来的：</span><br><span class="line">Trojan的config.json位置:/usr/local/etc/trojan/config.json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//设置重启和开机自启动，这个直接问chatgpt</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bbr加速安装</span><br><span class="line">//先安装wget</span><br><span class="line">yum install wget</span><br><span class="line"></span><br><span class="line">//安装bbr</span><br><span class="line">wget -N --no-check-certificate &quot;https://gist.github.com/zeruns/a0ec603f20d1b86de6a774a8ba27588f/raw/4f9957ae23f5efb2bb7c57a198ae2cffebfb1c56/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>vpn</tag>
      </tags>
  </entry>
  <entry>
    <title>cloudflare创建自己的短链生成网站</title>
    <url>/2023/07/20/%E4%BD%BF%E7%94%A8cloudflare%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%9F%AD%E9%93%BE%E7%94%9F%E6%88%90%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<p>本教程需要使用的网站或工具：</p>
<ol>
<li><a href="https://www.cloudflare.com/">https://www.cloudflare.com/</a></li>
<li>一个域名（需要解析到cloudflare上面）</li>
<li>科学上网</li>
</ol>
<p>教程：</p>
<ol>
<li><p>登录cloudflare</p>
</li>
<li><p>点击<code>Workers 和 Pages</code></p>
</li>
<li><p>点击<strong>KV</strong></p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720232556634.png" alt="image-20230720232556634" style="zoom:50%;" />
</li>
<li><p>点击创建命名空间，点击添加</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720232658914.png" alt="image-20230720232658914" style="zoom:50%;" />
</li>
<li><p>完成之后点击查看，输入密钥和值（随意，或者可以按照我的填写），点击添加条目</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720232900640.png" alt="image-20230720232900640" style="zoom:50%;" />
</li>
<li><p>点击概述，创建应用程序</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720233042717.png" alt="image-20230720233042717" style="zoom:50%;" />
</li>
<li><p>点击创建Worker，名称随意，点击部署</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720233249511.png" alt="image-20230720233249511" style="zoom:50%;" />
</li>
<li><p>点击编辑代码，进入之后把原先的代码删完，复制这个代码<code>https://github.com/a624587332/Url-Shorten-Worker/blob/main/index.js</code>,粘贴，修改178行成baidu.com等国内网站或者你自己的博客地址也行，然后点击保存并部署</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720233559571.png" alt="image-20230720233559571" style="zoom:50%;" />
</li>
<li><p>回到workers空间，点击设置，点击变量</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720233741484.png" alt="image-20230720233741484" style="zoom:50%;" />
</li>
<li><p>下滑找到KV命名空间绑定，名称填<code>LINKS</code></p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720233919422.png" alt="image-20230720233919422" style="zoom:50%;" />
</li>
<li><p>现在即可通过访问提供的网址进行访问<code>https://....workers.dev/dlj</code>，<code>dlj</code>就是你在第五部中添加的值，因为dev域名污染严重，有时候会进不去，我们可以绑定自己的域名，点击查看（如果没有域名，到这一步即可以使用）</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720234442039.png" alt="image-20230720234442039" style="zoom:50%;" />
</li>
<li><p>点击添加自定义域（域名需要在cloudflare存在解析，然后自己在域名前面添加二级域名即可）</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720234555680.png" alt="image-20230720234555680" style="zoom: 50%;" />
</li>
<li><p>通过你添加的域名加上第五步中你设置的值即可访问</p>
<img src="https://github.com/ninuan/images/raw/main//images/image-20230720234900048.png" alt="image-20230720234900048" style="zoom:50%;" /></li>
</ol>
]]></content>
      <tags>
        <tag>cloudflare</tag>
      </tags>
  </entry>
</search>
